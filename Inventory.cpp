#include "Inventory.h"


// функция, показывающая меню
int show_menu(const item_menu *m, int max_item)
{
	// вывод всех пунктов меню в аккуратный столбик
	for (int i = 0; i < max_item; i++)
	{
		cout << setw(4) << m[i].action << ". " << m[i].text << endl;
	}
	cout << setw(4) << 0 << ". выйти" << endl;
	// переменная, запоминающая выбранное действие
	int variant;
	// вывод просьбы о выборе действия в меню
	cout << "Выберите действие:	";
	// ввод выбранного действия
	cin >> variant;
	// возврат (чтобы была возможность проделать несколько действий в инвентаре без завершения программы)
	return variant;
}

// функция показа предметов, которые уже есть в инвентаре
void show_items(Player* player)
{
	// вывод предметов инвентаря на экран
	for (int i = 3; i < 9; i++)
	{
		cout << player->items[i] << endl;
	}
	system("pause");
}


// функция псевдосортировки (поиск по слову)
void find_items(Player* player)
{
	show_items(player);
	// переменная, хранящее слово/строку/подстроку для поиска
	string word;
	// переменная-счётчик
	int h = 0;
	// просьба о вводе слова для поиска
	cout << endl << "Введите слово для поиска: " << endl << endl;
	// ввод слова для поиска
	cin >> word;
	// вывод результатов поиска с введённым словом
	cout << endl << "Результаты поиска со словом <<" << word << ">>: " << endl << endl;
	// цикл поиска слова в строках файла
	for (int j = 3; j < 9; j++)
	{
		// условие вывода строк с искомым словом
		if (player->items[j].find(word, 0) != string::npos)
		{
			// вывод строк, с искомым словом
			cout << player->items[j] << endl;
			h = h++;
		}
	}
	// условие вывода сообщения о том, что поиск не дал результатов
	if (h == 0)
	{
		// вывод сообщения о том, что поиск не дал результатов
		cout << "В вашем инвентаре предметов со словом <<" << word << ">> нет" << endl;
	}
	// чтение символов с клавиатуры
	_getch();
}


