#include "Inventory.h"



// структура для вызываемого меню инвентаря
struct item_menu
{
	// переменная, запоминающая номер действия
	int action;
	// переменная, запоминающая текст
	const char *text;
};

// внешний вид меню в инвентаре
item_menu menu[] =
{
{ 1, "просмотреть содержимое" },
{ 2, "отсортировать" },
{ 3, "выбросить предмет"},
};

// функция, показывающая меню
int show_menu(const item_menu *m, int max_item)
{
	// вывод всех пунктов меню в аккуратный столбик
	for (int i = 0; i < max_item; i++)
	{
		cout << setw(4) << m[i].action << ". " << m[i].text << endl;
	}
	cout << setw(4) << 0 << ". выйти" << endl;
	// переменная, запоминающая выбранное действие
	int variant;
	// вывод просьбы о выборе действия в меню
	cout << "Выберите действие:	";
	// ввод выбранного действия
	cin >> variant;
	// возврат (чтобы была возможность проделать несколько действий в инвентаре без завершения программы)
	return variant;
}

// функция показа предметов, которые уже есть в инвентаре
int show_items()
{
	// открытие файла для чтения
	ifstream in2("Items.txt");
	// чтение содержимого файла в буфер обмена и вывод содержимого буфера на экран
	cout<<in2.rdbuf()<<endl;
	// закрытие файла
	in2.close();
	system("pause");
	return 0;
}


// функция псевдосортировки (поиск по слову)
int sort_items()
{
	// переменные-счетчики
	int o;	int i = 0;
	// выделение памяти под массив из 10 строк
	string *Text = new string[10];
	// открытие файла для чтения
	ifstream in2("Items.txt");
	// чтение файла до самого конца
	while (!in2.eof())
	{
		//считывание текста в массив строк
		getline(in2, Text[i]);
		i++;
	}
	// вывод на экран содержимого файла
	cout << "\n" << "Содержимое:" << "\n" << endl;
	for (o = 0; o<i; o++)
	{
		cout << Text[o] << endl;
	}
	// переменная, хранящее слово/строку/подстроку для поиска
	string word;
	// переменная-счётчик
	int h = 0;
	// просьба о вводе слова для поиска
	cout << endl << "Введите слово для поиска: " << endl << endl;
	// ввод слова для поиска
	cin >> word;
	// вывод результатов поиска с введённым словом
	cout << endl << "Результаты поиска со словом <<" << word << ">>: " << endl << endl;
	// цикл поиска слова в строках файла
	for (int j = 0; j<i; j++)
	{
		// условие вывода строк с искомым словом
		if (Text[j].find(word, 0) != string::npos)
		{
			// вывод строк, с искомым словом
			cout << Text[j] << endl;
			h = h++;
		}
	}
	// условие вывода сообщения о том, что поиск не дал результатов
	if (h == 0)
	{
		// вывод сообщения о том, что поиск не дал результатов
		cout << "В вашем инвентаре предметов со словом <<" << word << ">> нет" << endl;
	}
	// чтение символос с клавиатуры
	getch();
	// освобождение памяти
	delete[] Text;
	//возвращение значения (спросить. надо ли оно?)
	return 0;
}


// функция удаления предмета из инвентаря (не дописана)
void drop_item()
{
string n;
cin >> n;
}
